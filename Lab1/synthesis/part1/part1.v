
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module part1(

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	
	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================
assign HEX0[7] = (~(KEY[0])&~(KEY[1])) | (~(KEY[0])&SW[0]) | (~(KEY[1])&SW[0]);
//assign HEX0[6] = ~(KEY[0]&KEY[1]) | (~(KEY[0])&SW[0]) | (~(KEY[1])&SW[0]);

//assign HEX0[5] = ~(KEY[0]&KEY[1]) | (~(KEY[0])&SW[0]) | (~(KEY[1])&SW[0]);
//assign HEX0[4] = ~(KEY[0]&KEY[1]) | (~(KEY[0])&SW[0]) | (~(KEY[1])&SW[0]);
//assign HEX0[3] = ~(KEY[0]&KEY[1]) | (~(KEY[0])&SW[0]) | (~(KEY[1])&SW[0]);
//assign HEX0[2] = ~(KEY[0]&KEY[1]) | (~(KEY[0])&SW[0]) | (~(KEY[1])&SW[0]);
//assign HEX0[1] = ~(KEY[0]&KEY[1]) | (~(KEY[0])&SW[0]) | (~(KEY[1])&SW[0]);
//assign HEX0[0] = ~(KEY[0]&KEY[1]) | (~(KEY[0])&SW[0]) | (~(KEY[1])&SW[0]);



endmodule
